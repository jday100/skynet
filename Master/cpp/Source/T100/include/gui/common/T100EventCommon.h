#ifndef T100EVENTCOMMON_H
#define T100EVENTCOMMON_H


#include <windows.h>
#include "T100Common.h"

typedef struct T100MESSAGE_DATA{
    HWND            WINDOW_HWND;
    T100WORD        MESSAGE;
    WPARAM          WINDOW_WPARAM;
    LPARAM          WINDOW_LPARAM;
}T100MESSAGE_DATA;

typedef enum T100EVENT_TYPE{
    T100EVENT_NONE,
    T100EVENT_MENU,
    T100EVENT_COMMAND,

    T100EVENT_WINDOW_CREATE,
    T100EVENT_WINDOW_DESTROY,

    T100EVENT_WINDOW_CLOSE,

    T100EVENT_WINDOW_SIZE,
    T100EVENT_WINDOW_SIZING,
    T100EVENT_WINDOW_PAINT,
    T100EVENT_WINDOW_ENTER,
    T100EVENT_WINDOW_LEAVE,

    T100EVENT_WINDOW_NOTIFY,

    T100EVENT_WINDOW_SET_FOCUS,
    T100EVENT_WINDOW_KILL_FOCUS,

    T100EVENT_MOUSE_MOVING,
    T100EVENT_MOUSE_LEFT_DOWN,
    T100EVENT_MOUSE_LEFT_UP,
    T100EVENT_MOUSE_MIDDLE_DOWN,
    T100EVENT_MOUSE_MIDDLE_UP,
    T100EVENT_MOUSE_RIGHT_DOWN,
    T100EVENT_MOUSE_RIGHT_UP,
    T100EVENT_MOUSE_ENTER_WINDOW,
    T100EVENT_MOUSE_LEAVE_WINDOW,
    T100EVENT_MOUSE_LEFT_DOUBLE_CLICK,
    T100EVENT_MOUSE_MIDDLE_DOUBLE_CLICK,
    T100EVENT_MOUSE_RIGHT_DOUBLE_CLICK,
    T100EVENT_MOUSE_WHEEL,

    T100EVENT_KEY_DOWN,
    T100EVENT_KEY_UP,
    T100EVENT_KEY_CHAR,

    T100EVENT_MAX
}T100EVENT_TYPE;

typedef enum T100MENU_ID{
    T100MENU_ID_NONE,
    T100MENU_ID_NEW,
    T100MENU_ID_OPEN,
    T100MENU_ID_CLOSE,
    T100MENU_ID_SAVE,
    T100MENU_ID_SAVE_AS,
    T100MENU_ID_QUIT,
    T100MENU_ID_UNDO,
    T100MENU_ID_REDO,
    T100MENU_ID_CUT,
    T100MENU_ID_COPY,
    T100MENU_ID_PASTE,
    T100MENU_ID_ABOUT,
    T100MENU_ID_USER        = 1000
}T100MENU_ID;

#endif // T100EVENTCOMMON_H
