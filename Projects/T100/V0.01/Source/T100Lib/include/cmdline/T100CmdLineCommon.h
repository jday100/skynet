#ifndef T100CMDLINECOMMON_H
#define T100CMDLINECOMMON_H


#include "T100Common.h"

#define     T100CMDLINE_INFO_VECTOR         std::vector<T100CmdLineInfo*>
#define     T100CMDLINE_INFO_HASH           std::unordered_map<T100WSTRING, T100CmdLineInfo*>


typedef enum{
    T100CMDLINE_NONE        = 0,
    T100CMDLINE_EXEC,
    T100CMDLINE_SWITCH,
    T100CMDLINE_OPTION,
    T100CMDLINE_PARAM,
    T100CMDLINE_MAX
}T100CMDLINE_TYPE;


typedef enum{
    T100CMDLINE_TOKEN_NONE          = 0,
    T100CMDLINE_TOKEN_EOF,
    T100CMDLINE_TOKEN_ERROR,

    T100CMDLINE_TOKEN_STRING,

    T100CMDLINE_TOKEN_AAAA,

    T100CMDLINE_TOKEN_PROMPT,
    T100CMDLINE_TOKEN_CHAR,
    T100CMDLINE_TOKEN_EQUAL,
    T100CMDLINE_TOKEN_END,

    T100CMDLINE_TOKEN_EXEC,
    T100CMDLINE_TOKEN_SWITCH,
    T100CMDLINE_TOKEN_OPTION,
    T100CMDLINE_TOKEN_PARAM,

    T100CMDLINE_TOKEN_MAX
}T100CMDLINE_TOKEN_TYPE;


#endif // T100CMDLINECOMMON_H
